
from glob import glob

hmms ,= glob_wildcards("hmm_profiles/{hmm}.hmm")
accs = []
for fname in glob("data/*.txt"):
	with open(fname) as fh:
		for line in fh:
			accs.append(line.rstrip())

rule all:
	input:
		"milestones/presearch.txt"

rule wgs_to_fna:
	input:
		"wgs/{acc}"
	output:
		"database/{acc}.fna"
	shell:
		"vdb-dump -T SEQUENCE -f tab -C ACCESSION,ACC_VERSION,READ {input} | sed 's/\\t/./' | seqkit tab2fx -o {output}"

rule gbk_to_fna:
	input:
		"wgs/{acc}.gbk"
	output:
		"database/{acc}.fna"
	shell:
		"""
		biotags.pl -i {input} -T id,version,organism,seq | awk -F'\\t' '$2{{$1=$1"."$2}}{{printf">%s [%s]\\n%s\\n",$1,$3,$4}}' | seqkit seq -o {output}
		"""

rule gbk_to_gff:
	input:
		"wgs/{acc}.gbk"
	output:
		"database/{acc}.gff"
	shell:
		"""
		biotags.pl -i {input} -p CDS -T id,version -t start,end,strand,protein_id | sed s/Prokka:// | \
                	awk -F'\\t' '$2 {{$1=$1"."$2}} $3 {{ printf "%s\\tGenBank\\tCDS\\t%d\\t%d\\t.\\t%s\\t.\\tID=%s\\n", $1, $3, $4, ($5>0)?"+":"-", $6 }}' > {output}
		"""

rule wgs_to_gff:
	input:
		"wgs/{acc}"
	output:
		"database/{acc}.gff"
	shell:
		"""
		awk -F'\\t' 'NF==2 {{v[$1]=$2}} NF==5&&v[$5] {{ printf "%s.%s\\tGenBank\\tCDS\\t%d\\t%d\\t.\\t%s\\t.\\tID=%s.%s\\n", $1, v[$1], $2+1, $2+$3, ($4>1)?"-":"+", $5, v[$5] }}' OFS='\\t' \
                	<(vdb-dump -T SEQUENCE -f tab -C ACCESSION,ACC_VERSION {input}) \
        	        <(vdb-dump -T PROTEIN -f tab -C GB_ACCESSION,ACC_VERSION {input}) \
	                <(vdb-dump -T FEATURE -f tab -C LOC_ACCESSION,LOC_START,LOC_LEN,LOC_STRAND,PRODUCT_ACCESSION {input}) > {output}
		"""

rule search_orfs:
	input:
		"database/{acc}.fna"
	output:
		"database/{acc}-{hmm}.out"
	params:
		hmm = lambda w: "hmm_profiles/%s.hmm" % w.hmm
	shell:
		"getorf -filter < {input} | seqkit seq -M99999 | hmmsearch {params.hmm} - | tr '\\n' '\\r' | grep -v 'No hits detected' | tr '\\r' '\\n' > {output}"

rule match_orfs:
	input:
		"database/{acc}-{hmm}.out"
	output:
		"database/{acc}-{hmm}.match"
	params:
		motif_file = lambda w: "hmm_profiles/%s.motif" % w.hmm
	shell:
		"""
		if [ -s {input} ]; then
			Rscript workflow/scripts/motifs.R {input} {params.motif_file} {output}
		else
			touch {output}
		fi
		"""

rule collect_matches:
	input:
		expand("database/{acc}-{hmm}.match", acc = accs, hmm = hmms), expand("database/{acc}.gff", acc = accs)
	output:
		"milestones/presearch.txt"
	shell:
		"find database -name '*.match' -size +1c | parallel --tagstring {{/.}} cat | sed s/_[0-9]*$// | tr - \\t | parallel --tag --colsep \\t wc -l '<' database/{{1}}.gff > {output}"
